var g=n=>{throw TypeError(n)};var p=(n,o,e)=>o.has(n)||g("Cannot "+e);var t=(n,o,e)=>(p(n,o,"read from private field"),e?e.call(n):o.get(n)),r=(n,o,e)=>o.has(n)?g("Cannot add the same private member more than once"):o instanceof WeakSet?o.add(n):o.set(n,e);var l,u,s,i,c;class a{constructor(){r(this,l,getComputedStyle(document.documentElement));r(this,u,t(this,l).getPropertyValue("--q-info").trim());r(this,s,t(this,l).getPropertyValue("--q-negative").trim());r(this,i,t(this,l).getPropertyValue("--q-warning").trim());r(this,c,t(this,l).getPropertyValue("--q-attention").trim())}debug(o,e=null){}info(o){console.info(`%c[INFO]: %c${o}`,`color: ${t(this,u)};font-size: 16px;`,`color: ${t(this,u)}; font-size: 16px; text-decoration: underline;`)}log(o,e){e?console.log(`%c[LOG]: %c${o} âž”`,`color: ${t(this,c)}; font-size: 12px;; font-weigth: 700;`,`color: ${t(this,c)}; font-size: 12px;; font-weigth: 700;`,e):console.log(`%c[LOG]: %c${o}`,`color: ${t(this,c)}; font-size: 12px;; font-weigth: 700;`,`color: ${t(this,c)}; font-size: 12px;; font-weigth: 700;`)}warn(o,e=null){e?console.log(`%c[WARN]: %c${o}`,`color: ${t(this,i)}; font-size: 16px;`,`color: ${t(this,i)}; font-size: 16px; text-decoration: underline;`,e):console.log(`%c[WARN]: %c${o}`,`color: ${t(this,i)}; font-size: 16px;`,`color: ${t(this,i)}; font-size: 16px; text-decoration: underline;`)}error(o,e=null){e?console.log(`%c[ERROR]: %c${o}`,`color: ${t(this,s)}; font-size: 20px;`,`color: ${t(this,s)}; font-size: 20px; text-decoration: underline;`,e):console.log(`%c[ERROR]: %c${o}`,`color: ${t(this,s)}; font-size: 20px;`,`color: ${t(this,s)}; font-size: 20px; text-decoration: underline;`)}errorWithStack(o,e=""){const f=e?`[${e}] `:"";console.error(`${f}${o.message}`,o.stack)}group(o,e){console.group(o);try{e()}finally{console.groupEnd()}}groupCollapsed(o,e){console.groupCollapsed(o);try{e()}finally{console.groupEnd()}}time(o,e){console.time(o);try{return e()}finally{console.timeEnd(o)}}table(o,e=null){e?console.table(o,e):console.table(o)}assert(o,e){console.assert(o,e)}clear(){console.clear()}count(o="default"){console.count(o)}countReset(o="default"){console.countReset(o)}trace(o=""){console.trace(o)}json(o,e=""){const f=JSON.stringify(o,null,2);e?console.log(`${e}:`,f):console.log(f)}}l=new WeakMap,u=new WeakMap,s=new WeakMap,i=new WeakMap,c=new WeakMap;const h=new a;export{h as l};
